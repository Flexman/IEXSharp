name: prerelease NuGet

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    # also works with windows-latest and macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    #- name: Setup .NET Core - no need as dotnet 3 is already installed by default on all 3 platforms
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 2.2.108
    - name: Build with dotnet and create prerelease nupkg
      run: dotnet build --configuration PreRelease --version-suffix prerelease-$(date +%Y%m%d%H%M%S)
      shell: bash
    #  powershell format: $(Get-Date -Format "yyyyMMddHHmmss")
    - name: Install NuGet client
      uses: nuget/setup-nuget@v1
    #- name: Setup nuget config # use .NuGet.config for now 2/2 GH bug https://github.com/NuGet/Home/issues/8580
    #  run: sed 's/GHPackagesToken/${{ secrets.GHPackagesToken }}/g' .nuget.config > nuget.config
    - name: Add GitHub Packages source to NuGet
      run: |
           nuget sources add -name "GitHubPackages" -Source https://nuget.pkg.github.com/vslee/index.json -Username vslee -Password ${{ secrets.GHPackagesToken }}
           nuget push ./IEXSharp/bin/PreRelease/*.nupkg -Source "GitHubPackages"
    #- name: list dir
    #  run: |
    #       dir
    #       cd IEXSharp
    #       dir
    #       cd bin
    #       dir
    #       cd Release
    #       dir
    #- name: Publish nuget to GitHub Packages
    #  run: nuget push ./IEXSharp/bin/PreRelease/*.nupkg -Source "GitHubPackages"
      #run: |
      #     for f in ./IEXSharp/bin/PreRelease/*.nupkg
      #     do
      #       curl -vX PUT -u "vslee:${{ secrets.GHPackagesToken }}" -F package=@$f https://nuget.pkg.github.com/vslee/
      #     done
      #shell: bash
